Install Git & Git-Bash for windows
Configure user, email - this creates global config file .gitconfig in home directory
    git config --global user.name "penubala.rahul@gmail.com"
    git config --global user.email "penubala.rahul@gmail.com"
To change the default editor to VScode - git config --global core.editor "code --wait"

Git init - creates .git folder & initiates repo (exclude it in VScode setting to see it in explorer)
    do not initialize nested repos

To avoid files being added to staging area/commits, use .gitignore file in the repo home
    Secrets
    Logs
    OS files
    Dependencies, packages etc . . .
gitignore.io site is useful to find the template of files to be ignored for any module

HEAD -> points to branch reference of current branch
Branch reference -> points to latest commit of that branch
HEADLESS -> when we switch to a hash that is not latest commit

git branch    - list branches
git branch <name> - create branches (This does not automatically switch the branch)
git switch <name> / git checkout <name> / git switch -c <name> - Craetes a branch and switches in one command
A new branch inherits "parent" commits, but, then adds commits on its own
(HEAD -> testbranch,master) ==> Means, both master & testbranch are pointing to same commit, but HEAD points to testbranch

When there are uncommited changes, we should either commit them, or stash them before switching a branch

git branch -m <rename> - renaming a branch, when we are on the branch
git branch -d <name> - deleting a branch, from outside of it
git branch -D <name> - deleting even if it is not merged
======================================================================
When a parent does not have any more newer commits, child can be merged using Fast forward merge - no merge commit
When a parent has newer commit, child can be merged automatically when there are no conflicts
When there are conflicts, we need to manually resolve & "commit" to complete the merge - merge commit

